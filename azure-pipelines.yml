# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  name: 'my-personal-computer'

variables:
  sshPrivateKeyPath: '$(Agent.TempDirectory)/pyxer_key.pem'

steps:
- checkout: self

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Use Python 3.x'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    echo "Starting model training..."
    python train.py
    echo "Model training completed."
  displayName: 'Train Model'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/src'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/src'
    ArtifactName: 'app'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'pyxer_key.pem'
  displayName: 'Download SSH Key'

- script: |
    echo "Creating directory on the Azure VM..."
    chmod 600 $(sshPrivateKeyPath)
    ssh -o StrictHostKeyChecking=no -i $(sshPrivateKeyPath) azureuser@20.64.243.169 "sudo mkdir -p /var/www/html"
  displayName: 'Create Directory on Azure VM'

- script: |
    echo "Copying codebase to Azure VM..."
    chmod 600 $(sshPrivateKeyPath)
    scp -o StrictHostKeyChecking=no -i $(sshPrivateKeyPath) -r $(Build.SourcesDirectory)/src/* azureuser@20.64.243.169:/var/www/html
    echo "Files copied successfully."
  displayName: 'Copy Codebase to Azure VM'







