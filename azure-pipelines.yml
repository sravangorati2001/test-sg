# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  name: 'my-personal-computer'  

variables:
  sshPrivateKey: $(your_ssh_private_key_variable_name)

steps:
- checkout: self

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Use Python 3.x'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    echo "Starting model training..."
    python train.py
    echo "Model training completed."
  displayName: 'Train Model'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/src'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/src'
    ArtifactName: 'app'

- task: SSH@0  # Use SSH to connect to the production VM
  inputs:
    sshEndpoint: 'pyxer-service'  # Azure DevOps service connection for SSH
    runOptions: 'inline'
    inline: |
      cd /var/www/html  # Navigate to the directory where the application will be deployed
      sudo rm -rf *     # Remove existing files (optional, depending on deployment strategy)
      sudo tar zxvf $(System.DefaultWorkingDirectory)/_temp/app.tar.gz  # Extract the uploaded artifact





